<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tejas Siripurapu</title><link>https://teejas.github.io/</link><description>Recent content on Tejas Siripurapu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Athul</copyright><lastBuildDate>Tue, 23 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://teejas.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Investigating Global COVID-19 Vaccinations</title><link>https://teejas.github.io/notebooks/covid-19-vaccinations/</link><pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate><guid>https://teejas.github.io/notebooks/covid-19-vaccinations/</guid><description>Introduction I&amp;rsquo;m curious to see how vaccination rates compare between countries and within countries (specifically the United States, India, and Israel).
Israel is the country with the fastest vaccination rate, already surpassing 30% of the total population vaccinated. I&amp;rsquo;m curious to see how this compares to the other local Arab states (I know the UAE is in second in terms of vaccination rate), and how vaccination rates among Palestinians compare, if that data is available.</description></item><item><title>Defining Music Services: Artist-facing vs. Listener-facing</title><link>https://teejas.github.io/posts/defining-music-services/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://teejas.github.io/posts/defining-music-services/</guid><description>Introduction When people think of music services they often think of streaming services like Spotify, Apple Music, and the like. While these are the largest players in the music services industry, streaming is far from the only service provided in the music industry. Music services can largely be split into two categories: listener-facing and artist-facing services. Listener-facing services are those which are geared towards helping listeners find new music (music discovery), save and store music they like, and listen to music by streaming remotely (Spotify) or playing from local storage (iTunes).</description></item><item><title>Problems in the Music Industry: The Need for Better Recommenders and Improved Music Discovery</title><link>https://teejas.github.io/posts/music-discovery/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://teejas.github.io/posts/music-discovery/</guid><description>Introduction: Since artist compensation is dependent on the number of streams an artist can generate and the barrier of entry into music, in terms of distribution, is much lower, the entire pool of music available for streaming has become oversaturated with subpar songs and, more generally, the amount of readily streamable music is increasing rapidly. Building improved music discovery services and recommendation systems would solve these issues.
Artist Compensation and Counting Streams Firstly, the current model for compensating artists (adopted by Spotify and Apple Music, the two largest music streaming service providers) is entirely dependent on the number of streams an artist can generate.</description></item><item><title>Genre Classification and Recommendations Using the FMA Dataset</title><link>https://teejas.github.io/notebooks/fma_rec_and_genre_classification/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://teejas.github.io/notebooks/fma_rec_and_genre_classification/</guid><description>Introduction Working with the FMA dataset which contains audio features and free music snippets on 100k+ tracks. This is in the interest of working towards my own MIR using deep learning to extract audio features from audio signals (probably using GTZAN). The data comes from the FMA dataset. Let&amp;rsquo;s start by training a model to do feature extraction given an MFCC (derived from an audio signal). We can use the Echonest dataset which comes with audio features already extracted and use the FMA set with librosa to generate the MFCC.</description></item><item><title>Recommendations Based on Pitchfork Written Reviews</title><link>https://teejas.github.io/notebooks/pitchfork_review_rec/</link><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid>https://teejas.github.io/notebooks/pitchfork_review_rec/</guid><description>Introduction Setup First, let&amp;rsquo;s make sure we&amp;rsquo;re in the correct working directory and have all the necessary packages imported. We&amp;rsquo;ll also read in the dataset&amp;ndash;It&amp;rsquo;s been cleaned beforehand on my local machine; a simple process to get it into a csv rather than the SQLLite db I had downloaded. Finally, we&amp;rsquo;ll set a flag to indicate which vectorizer we are using in the interest of testing both and comparing (A/B testing).</description></item></channel></rss>